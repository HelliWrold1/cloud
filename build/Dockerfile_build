# Need to package the code first `tar zcf cloud.tar.gz $(ls)` and move it to the same directory as Dokerfile
# Compile the go code
FROM golang:1.18-alpine as build
COPY . /go/src/cloud
WORKDIR /go/src/cloud
RUN tar zxf cloud.tar.gz
RUN go env -w GOPROXY=https://goproxy.cn,direct
RUN go mod download
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /cloud cmd/cloud/main.go

# build grpc_health_probe
RUN go install github.com/grpc-ecosystem/grpc-health-probe@v0.4.12
RUN cd $GOPATH/pkg/mod/github.com/grpc-ecosystem/grpc-health-probe@v0.4.12 \
    && go mod download \
    && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "all=-s -w" -o /grpc_health_probe

# compressing binary files
#cd /
#upx -9 cloud
#upx -9 grpc_health_probe


# building images with binary
FROM alpine:latest
MAINTAINER zhufuyi "g.zhufuyi@gmail.com"

# set the time zone to Shanghai
RUN apk add tzdata  \
    && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo "Asia/Shanghai" > /etc/timezone \
    && apk del tzdata

# add curl, used for http service checking, can be installed without it if deployed in k8s
RUN apk add curl

COPY --from=build /cloud /app/cloud
COPY --from=build /go/src/cloud/configs/cloud.yml /app/configs/cloud.yml

# http port
EXPOSE 8080


WORKDIR /app

CMD ["./cloud", "-c", "configs/cloud.yml"]
# if you use the Configuration Center, cloud.yml is changed to the Configuration Center configuration.
#CMD ["./cloud", "-c", "configs/cloud.yml", "-enable-cc"]
