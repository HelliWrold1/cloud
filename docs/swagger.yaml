definitions:
  types.Column:
    properties:
      exp:
        description: expressions, which default to = when the value is null, have
          =, ! =, >, >=, <, <=, like
        type: string
      logic:
        description: logical type, defaults to and when value is null, only &(and),
          ||(or)
        type: string
      name:
        description: column name
        type: string
      value:
        description: column value
    type: object
  types.CreateFrameRequest:
    properties:
      data_type:
        type: integer
      dev_addr:
        type: string
      frame:
        type: string
      gateway_mac:
        type: string
    type: object
  types.DeleteFramesByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.GetFramesByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.Params:
    properties:
      columns:
        description: query conditions
        items:
          $ref: '#/definitions/types.Column'
        type: array
      page:
        description: page number, starting from page 0
        minimum: 0
        type: integer
      size:
        description: lines per page
        type: integer
      sort:
        description: sorted fields, multi-column sorting separated by commas
        type: string
    type: object
  types.Result:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateFrameByIDRequest:
    properties:
      data_type:
        type: integer
      dev_addr:
        type: string
      frame:
        type: string
      gateway_mac:
        type: string
      id:
        description: uint64 id
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: http server api docs
  title: frame api docs
  version: v0.0.0
paths:
  /api/v1/frame:
    post:
      consumes:
      - application/json
      description: submit information to create frame
      parameters:
      - description: frame information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateFrameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: create frame
      tags:
      - frame
  /api/v1/frame/{id}:
    delete:
      consumes:
      - application/json
      description: delete frame by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete frame
      tags:
      - frame
    get:
      consumes:
      - application/json
      description: get frame details by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: get frame details
      tags:
      - frame
    put:
      consumes:
      - application/json
      description: update frame information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: frame information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateFrameByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: update frame information
      tags:
      - frame
  /api/v1/frames:
    post:
      consumes:
      - application/json
      description: paging and conditional fetching of frames lists using post requests
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: get a list of frames
      tags:
      - frame
  /api/v1/frames/delete/ids:
    post:
      consumes:
      - application/json
      description: delete frames by multiple id using a post request
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteFramesByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete frames by multiple id
      tags:
      - frame
  /api/v1/frames/ids:
    post:
      consumes:
      - application/json
      description: get frames by multiple id using a post request
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.GetFramesByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: get frames by multiple id
      tags:
      - frame
schemes:
- http
- https
swagger: "2.0"
